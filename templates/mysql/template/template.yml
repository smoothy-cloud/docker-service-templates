api: v1

meta:
  name: MySQL
  description: An open-source relational database management system

form:

  - name: General
    questions:

      - type: select
        name: Version
        description: >
          The version of the MySQL server.
        variable: version
        required: true
        immutable: true
        options:
          - name: "5.7"
            value: "5.7"
          - name: "8.0"
            value: "8.0"
        default: "8.0"

      - type: binary_number
        name: Memory
        description: >
          The amount of memory allocated to the MySQL database. MySQL is a memory intensive application as
          it caches table and index data in main memory. The more data that can be cached, the less disk I/O is
          required and the faster your queries run.
        variable: memory
        minimum: 1024
        default: 2048

      - type: number
        name: CPU
        description: >
          The number of CPU millicores allocated to the MySQL database.
        variable: cpus
        default: 1000

  - name: Authentication
    questions:

      - type: password
        name: Root password
        description: >
          The password for the MySQL super user who has full access to all databases.
        variable: root_password
        required: true
        immutable: true
        default: "{{ environment.MYSQL_ROOT_PASSWORD }}"

      - type: string
        name: User
        description: >
          The user is created the first time that the service is installed on a server.
          It is granted full access to the databases listed below.
        variable: user
        required: true
        immutable: true
        default: "{{ environment.MYSQL_USER }}"

      - type: password
        name: Password
        description: >
          The password for the user that is created the first time that the service is 
          installed on a server.
        variable: password
        required: true
        immutable: true
        default: "{{ environment.MYSQL_PASSWORD }}"

  - name: Databases
    questions:

      - type: structs
        name: Databases
        description: >
          The databases are created the first time that the service is installed on a server.
        variable: databases
        immutable: true
        questions:
          - type: string
            name: Name
            description: The name of the database.
            variable: name
            required: true

deployment:

  - type: volume
    name: mysql_5
    if: "{{ variable.version == '5.7' }}"

  - type: volume
    name: mysql_8
    if: "{{ variable.version == '8.0' }}"

  - type: config_file
    name: initialize_mysql
    source: initialize_mysql.sql

  - type: container
    name: mysql
    image:
      switch:
        - case: "{{ variable.version == '5.7' }}"
          value: mysql:5.7
        - case: "{{ variable.version == '8.0' }}"
          value: mysql:8.0
    volume_mounts:
      - volume: "{* volume.mysql_5 *}"
        mount_path: /var/lib/mysql
        if: "{{ variable.version == '5.7' }}"
      - volume: "{* volume.mysql_8 *}"
        mount_path: /var/lib/mysql
        if: "{{ variable.version == '8.0' }}"
    config_file_mounts:
      - config_file: "{* config_file.initialize_mysql *}"
        mount_path: /docker-entrypoint-initdb.d/initialize_mysql.sql
    environment:
      - key: MYSQL_ROOT_PASSWORD
        value: "{{ variable.root_password }}"
      - key: MYSQL_USER
        value: "{{ variable.user }}"
      - key: MYSQL_PASSWORD
        value: "{{ variable.password }}"
    command:
      - --innodb-buffer-pool-size={{ (variable.memory * 0.8)|round * 1024 * 1024 }}
      - value: --default_authentication_plugin=mysql_native_password
        if: "{{ variable.version == '8.0' }}"
    memory: "{{ variable.memory }}"
    cpus:  "{{ variable.cpus }}"

  - type: entrypoint
    name: mysql
    alias: MySQL database
    container: "{* container.mysql *}"
    port: 3306

interface:

  - type: shared_variable
    key: MYSQL_URL
    value: "mysql://{{ variable.user }}:{{ variable.password }}@{{ entrypoint.mysql.host }}:{{ entrypoint.mysql.port }}"

  - type: shared_variable
    key: MYSQL_HOST
    value: "{{ entrypoint.mysql.host }}"

  - type: shared_variable
    key: MYSQL_PORT
    value: "{{ entrypoint.mysql.port }}"

  - type: shared_variable
    key: MYSQL_USER
    value: "{{ variable.user }}"

  - type: shared_variable
    key: MYSQL_PASSWORD
    value: "{{ variable.password }}"

  - type: logs
    name: MySQL logs
    container: "{* container.mysql *}"
