api: v1

meta:
  name: MySQL
  description: An open-source relational database management system

form:
  - title: General
    questions:
      - variable: mysql_version
        label: Version
        hint: >
          The version of the MySQL server.
        required: true
        immutable: true
        type: select
        options:
          - label: "5.7"
            value: "5.7"
          - label: "8.0"
            value: "8.0"
      - variable: mysql_root_password
        label: Root password
        hint: >
          The password for the MySQL super user who has full access to all databases.
        required: true
        immutable: true
        type: string
        default: "{{ random_string(64) }}"
      - variable: mysql_user
        label: User
        hint: >
          The user is created the first time that the service is installed on a server.
          It is granted full access to the databases listed below. 
        required: true
        immutable: true
        type: string
      - variable: mysql_password
        label: Password
        hint: >
          The password for the user that is created the first time that the service is 
          installed on a server.
        required: true
        immutable: true
        type: string
      - variable: databases
        label: Databases
        hint: >
          The databases are created the first time that the service is installed on a server.
        type: structs
        immutable: true
        questions:
          - variable: name
            label: Name
            hint: The name of the database.
            type: string
            required: true
  - title: Resources
    questions:
      - variable: memory
        label: Memory
        hint: >
          The amount of memory allocated to the MySQL database. MySQL is a memory intensive application as
          it caches table and index data in main memory. The more data that can be cached, the less disk I/O is
          required and the faster your queries run.
        type: binary_number
        minimum: 1024
        default: 2048
      - variable: cpus
        label: CPU
        hint: >
          The number of CPU millicores allocated to the MySQL database.
        type: number
        default: 1000

deployment:

  - resource: volume
    name: mysql_5
    if: "{{ variable.mysql_version == '5.7' }}"

  - resource: volume
    name: mysql_8
    if: "{{ variable.mysql_version == '8.0' }}"

  - resource: config_file
    name: initialize_mysql
    source: initialize_mysql.sql

  - resource: container
    name: mysql
    image:
      switch:
        - case: "{{ variable.mysql_version == '5.7' }}"
          value: mysql:5.7
        - case: "{{ variable.mysql_version == '8.0' }}"
          value: mysql:8.0
    volume_mounts:
      - volume: "{* volume.mysql_5 *}"
        mount_path: /var/lib/mysql
        if: "{{ variable.mysql_version == '5.7' }}"
      - volume: "{* volume.mysql_8 *}"
        mount_path: /var/lib/mysql
        if: "{{ variable.mysql_version == '8.0' }}"
    config_file_mounts:
      - config_file: "{* config_file.initialize_mysql *}"
        mount_path: /docker-entrypoint-initdb.d/initialize_mysql.sql
    environment:
      - key: MYSQL_ROOT_PASSWORD
        value: "{{ variable.mysql_root_password }}"
      - key: MYSQL_USER
        value: "{{ variable.mysql_user }}"
      - key: MYSQL_PASSWORD
        value: "{{ variable.mysql_password }}"
    command:
      - part: --innodb-buffer-pool-size={{ (variable.memory * 0.8)|round * 1024 * 1024 }}
      - part: --default_authentication_plugin=mysql_native_password
        if: "{{ variable.mysql_version == '8.0' }}"
    memory: "{{ variable.memory }}"
    cpus:  "{{ variable.cpus }}"

  - resource: entrypoint
    name: mysql
    title: MySQL database
    container: "{* container.mysql *}"
    port: 3306

interface:
  shared_variables:
    MYSQL_URL: "mysql://root:{{ variable.mysql_root_password }}@{{ entrypoint.mysql.host }}:{{ entrypoint.mysql.port }}"
    MYSQL_HOST: "{{ entrypoint.mysql.host }}"
    MYSQL_PORT: "{{ entrypoint.mysql.port }}"
    MYSQL_USER: "root"
    MYSQL_PASSWORD: "{{ variable.mysql_root_password }}"
  logs:
    - title: MySQL logs
      container: "{* container.mysql *}"
