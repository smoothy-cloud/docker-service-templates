files:
  
  nginx/Dockerfile: |-
    #####################################
    # BUILD ASSETS
    #####################################

    FROM node:alpine as assets-stage

    RUN mkdir -p /app/services/laravel/
    WORKDIR /app/services/laravel/

    COPY code-repository/services/laravel/package*.json /app/services/laravel/
    RUN npm install

    COPY code-repository/services/laravel/ /app/services/laravel/

    COPY code-repository/libraries/ui-components/  /app/libraries/ui-components/

    RUN npm run production

    #####################################
    # CREATE NGINX CONTAINER
    #####################################

    FROM smoothy/nginx:1.19-1.0.0

    COPY --from=assets-stage /app/services/laravel/public /var/www/html/services/laravel/public

    COPY --chown=smoothy:smoothy nginx/server.conf /etc/nginx/conf.d/server.conf

    RUN ln -s /var/www/html/storage/app/public /var/www/html/public/storage

  nginx/server.conf: |-
    server {
        listen 8080;
        listen [::]:8080 default ipv6only=on;
        server_name _;

        root /var/www/html/services/laravel/public;
        index index.php index.html index.htm;
        error_page 404 /index.php;
        charset utf-8;

        add_header X-Frame-Options "sameorigin";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        location = /favicon.ico {
            log_not_found off;
        }

        location = /robots.txt  {
            log_not_found off;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
          expires 1M;
          add_header Cache-Control public;
          add_header Pragma public;
          add_header Vary Accept-Encoding;
        }

        location ~ \.php$ {

            root /var/www/html/services/laravel/public;

            # Defines a regular expression that captures two values. The first becomes the
            # value of the $fastcgi_script_name variable, the second becomes the value of
            # the $fastcgi_path_info variable.
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            # Sets the address of a FastCGI server. The address can be specified as a
            # domain name or IP address, and a port, or as a UNIX-domain socket path.
            fastcgi_pass app_service_backend_container_laravel:9000;

            # Sets a file name that will be appended after a URI that ends with a slash,
            # in the value of the $fastcgi_script_name variable.
            fastcgi_index index.php;

            include /etc/nginx/fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;

        }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ /\. {
            log_not_found off;
            deny all;
        }
    }
  
  php/Dockerfile: |-
    #####################################
    # SET UP PHP ENVIRONMENT
    #####################################

    FROM smoothy/php-fpm:7.4-1.0.0 AS php-stage

    ENV APPLICATION_ROOT /var/www/html/services/laravel/public

    RUN apt-get update \
     && (apt-get install -y default-mysql-client gnupg2 certbot python3-certbot-dns-cloudflare) \
     && ([ -d storage ] ?? echo "storage folder exists" || echo "storage folder does not exist") \
     && (echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" | tee -a /etc/apt/sources.list) \
     && (apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367) \
     && (apt update) \
     && (apt install -y ansible) \
     && apt-get clean \
     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

    #####################################
    # BUILD ASSETS
    #####################################

    FROM node:alpine AS assets-stage

    RUN mkdir -p /app/services/laravel/
    WORKDIR /app/services/laravel/

    COPY code-repository/services/laravel/package*.json /app/services/laravel/
    RUN npm install

    COPY code-repository/services/laravel/ /app/services/laravel/

    COPY code-repository/libraries/ui-components/  /app/libraries/ui-components/

    RUN npm run production

    #####################################
    # ADD PHP CODE
    #####################################

    FROM php-stage AS production-stage

    COPY --chown=smoothy:smoothy php/run.sh /entrypoints/run.sh
    COPY --chown=smoothy:smoothy php/scheduler.sh /scheduler.sh
    COPY --chown=smoothy:smoothy code-repository/services/laravel/ /var/www/html/services/laravel/

    COPY --chown=smoothy:smoothy --from=assets-stage /app/services/laravel/public /var/www/html/services/laravel/public

    COPY --chown=smoothy:smoothy code-repository/libraries/ui-components/ /var/www/html/libraries/ui-components/

    RUN chmod -R 775 /var/www/html/services/laravel/storage \
     && chmod -R 775 /var/www/html/services/laravel/bootstrap/cache

    WORKDIR /var/www/html/services/laravel/

    ARG PRIVATE_COMPOSER_REGISTRY_URL_0
    ARG PRIVATE_COMPOSER_REGISTRY_USERNAME_0
    ARG PRIVATE_COMPOSER_REGISTRY_PASSWORD_0
    RUN composer config $PRIVATE_COMPOSER_REGISTRY_URL_0 $PRIVATE_COMPOSER_REGISTRY_USERNAME_0 $PRIVATE_COMPOSER_REGISTRY_PASSWORD_0

    RUN composer install --ignore-platform-reqs --no-dev --no-interaction --prefer-dist

  php/init.sh: |
    #!/bin/bash

    #####################################
    # init Laravel application
    #####################################

    php artisan db:ready
    php artisan migrate --force

  php/run.sh: |
    #!/bin/bash

    #####################################
    # prepare Laravel application
    #####################################

    php artisan config:cache
    php artisan route:cache
    php artisan view:cache
    rm -f public/storage
    php artisan storage:link
  
  php/scheduler.sh: |-
    #!/bin/bash

    while [ true ]
    do
        php /var/www/html/services/laravel/artisan schedule:run &
        sleep 60
    done
  
template:
  deployment:

    - type: image
      id: app_service_backend_image_laravel
      name: laravel
      dockerfile: php/Dockerfile
      arguments:
        - name: PRIVATE_COMPOSER_REGISTRY_URL_0
          value: private.packagist.com
        - name: PRIVATE_COMPOSER_REGISTRY_USERNAME_0
          value: john.doe@example.com
        - name: PRIVATE_COMPOSER_REGISTRY_PASSWORD_0
          value: secret
    
    - type: image
      id: app_service_backend_image_nginx
      name: nginx
      dockerfile: nginx/Dockerfile
    
    - type: volume
      id: app_service_backend_volume_storage
      name: storage
    
    - type: container
      id: app_service_backend_container_laravel
      name: laravel
      image: app_service_backend_image_laravel
      volume_mounts:
        - volume: app_service_backend_volume_storage
          mount_path: /var/www/html/storage
      environment:
        - name: APP_KEY
          value: base64:c3SzeMQZZHPT+eLQH6BnpDhw/uKH2N5zgM2x2a8qpcA=
        - name: APP_ENV
          value: production
        - name: APP_DEBUG
          value: false
        - name: TIMEZONE
          value: Europe/Brussels
        - name: MAX_FILE_UPLOAD
          value: 25
        - name: OPCACHE
          value: true
      memory: 256
      cpus: 250
    
    - type: container
      id: app_service_backend_container_daemon_0
      name: daemon_0
      image: app_service_backend_image_laravel
      command:
        - php artisan horizon
      volume_mounts:
        - volume: app_service_backend_volume_storage
          mount_path: /var/www/html/storage
      environment:
        - name: APP_KEY
          value: base64:c3SzeMQZZHPT+eLQH6BnpDhw/uKH2N5zgM2x2a8qpcA=
        - name: APP_ENV
          value: production
        - name: APP_DEBUG
          value: false
        - name: TIMEZONE
          value: Europe/Brussels
      memory: 256
      cpus: 250
    
    - type: container
      id: app_service_backend_container_scheduler
      name: scheduler
      image: app_service_backend_image_laravel
      command:
        - bash /scheduler.sh
      volume_mounts:
        - volume: app_service_backend_volume_storage
          mount_path: /var/www/html/storage
      environment:
        - name: APP_KEY
          value: base64:c3SzeMQZZHPT+eLQH6BnpDhw/uKH2N5zgM2x2a8qpcA=
        - name: APP_ENV
          value: production
        - name: APP_DEBUG
          value: false
        - name: TIMEZONE
          value: Europe/Brussels
      memory: 256
      cpus: 250
    
    - type: container
      id: app_service_backend_container_nginx
      name: nginx
      image: app_service_backend_image_nginx
      volume_mounts:
        - volume: app_service_backend_volume_storage
          mount_path: /var/www/html/storage
      environment:
        - name: MAX_FILE_UPLOAD
          value: 25
      memory: 256
      cpus: 250
    
    - type: config_file
      id: app_service_backend_config_file_init
      name: init
      contents: |
        #!/bin/bash

        #####################################
        # init Laravel application
        #####################################

        php artisan db:ready
        php artisan migrate --force

    - type: job
      id: app_service_backend_job_init
      name: init
      image: app_service_backend_image_laravel
      command: 
        - bash /init.sh
      volume_mounts:
        - volume: app_service_backend_volume_storage
          mount_path: /var/www/html/storage
      config_file_mounts:
        - config_file: app_service_backend_config_file_init
          mount_path: /init.sh
      environment:
        - name: APP_KEY
          value: base64:c3SzeMQZZHPT+eLQH6BnpDhw/uKH2N5zgM2x2a8qpcA=
        - name: APP_ENV
          value: production
        - name: APP_DEBUG
          value: false
        - name: TIMEZONE
          value: Europe/Brussels
      memory: 256
      cpus: 250
    
    - type: entrypoint
      id: app_service_backend_entrypoint_laravel
      name: laravel
      alias: Laravel service
      container: app_service_backend_container_nginx
      port: 8080

  interface:

    - type: files
      name: Storage
      volume: app_service_backend_volume_storage

    - type: logs
      name: NGINX
      container: app_service_backend_container_nginx

    - type: logs
      name: Init script
      job: app_service_backend_job_init

    - type: logs
      name: Laravel
      container: app_service_backend_container_laravel

    - type: logs
      name: Scheduler
      container: app_service_backend_container_scheduler

    - type: logs
      name: 'Daemon logs: php artisan horizon'
      container: app_service_backend_container_daemon_0