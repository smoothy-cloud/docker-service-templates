api: v1

meta:
  name: Laravel
  description: The PHP Framework for Web Artisans

form:
  - title: Source code
    questions:
      - variable: path_to_source_code
        label: Path to Laravel source code
        hint: >
          The directory in your Git repository that contains the source code of your service.
        required: false
        type: file_path
        default: ''
      - variable: paths_to_shared_libraries
        label: Paths to shared libraries
        hint: >
          Some services require, in addition to their source code, the presence of a shared library 
          that is stored in the Git repository outside of the source directory. For example
          in "libraries/ui-components/" instead of "services/laravel/". If your service depends on
          one or more shared libraries, you should specify their paths in the Git repository here.
        required: false
        type: file_paths
      - variable: php_version
        label: PHP version
        hint: >
          The PHP version that your service is written in.
        required: true
        type: select
        options:
          - label: "7.4"
            value: "7.4"
  - title: Dependencies
    questions:
      - variable: private_composer_registries
        label: Private composer registries
        hint: >
          If your Laravel service depends on packages that are hosted on a private Composer registry you can 
          specify the registries here. Smoothy will configure Composer to authenticate with the registries before
          installing the packages.
        type: structs
        questions:
          - variable: url
            label: URL
            hint: The URL of the private registry.
            type: string
            required: true
          - variable: username
            label: Username
            hint: The username that will be used to authenticate with the private registry.
            type: string
            required: true
          - variable: password
            label: Password
            hint: The password that will be used to authenticate with the private registry.
            type: password
            required: true
      - variable: system_dependencies
        label: System dependencies
        hint: >
          If your Laravel service requires some specific Linux (Debian) packages to be installed, you can specify
          them here. Smoothy will install the packages for you using the apt package manager.
        type: list
        options:
          - label: "MySQL client: <code>default-mysql-client</code>"
            value: "default-mysql-client"
          - label: "PostgreSQL client: <code>postgresql-client</code>"
            value: "postgresql-client"
  - title: Configuration
    questions:
      - variable: timezone
        label: Timezone
        hint: >
          Specify the timezone that should be configured for your service.
        required: true
        type: timezone
      - variable: opcache_enabled
        label: OPcache
        hint: >
          PHP's OPcode caching system can drastically improve the speed of your Laravel service. Specify whether
          or not you want to enable OPcache for your service.
        type: boolean
      - variable: maximum_file_upload_size
        label: Maximum file upload size
        hint: >
          Specify the maximum allowed file upload size in megabytes (MB) for your service.
        type: integer
        default: 2
  - title: Background processing
    questions:
      - variable: run_scheduler
        label: Laravel scheduler
        hint: >
          Specify whether your Laravel service uses the scheduler to execute periodic tasks. Smoothy will
          configure your service to automatically run <code>php artisan schedule:run</code> every minute.
        type: boolean
      - variable: daemons
        label: Daemons
        hint: >
          Daemons are processes that you start once and keep running until you explicitly tell them to. A few
          Laravel specific commands that should be executed as daemons are <code>php artisan queue:work</code>
          and <code>php artisan horizon</code>. If your Laravel service uses daemon processes, you
          can specify them here.
        type: list
        options:
          - label: "php artisan horizon"
            value: "php artisan horizon"
          - label: "php artisan queue:work"
            value: "php artisan queue:work"
  - title: Assets
    questions:
      - variable: build_assets
        label: Compile assets
        hint: >
          Chances are your Laravel service contains JavaScript and CSS assets that need to be compiled before they
          can be deployed. When this is the case, enable this option.
        type: boolean
      - variable: package_manager
        label: Package manager
        hint: >
          The package manager that should be used to install the JavaScript dependencies of your service.
        required: true
        type: select
        options:
          - label: NPM
            value: npm
          - label: Yarn
            value: yarn
        default: npm
        if: "{{ variable.build_assets }}"
      - variable: build_assets_script
        label: Compile assets script
        hint: >
          You can provide the necessary commands to compile the assets of your Laravel service. Upon every
          release, Smoothy will run these commands in a Node.js environment and copy the compiled assets
          into the <code>public</code> folder of your service.
        required: true
        type: code
        default:
          switch:
            - case: "{{ variable.package_manager == 'npm' }}"
              value: npm run production
            - case: "{{ variable.package_manager == 'yarn' }}"
              value: yarn run production
        if: "{{ variable.build_assets }}"
      - variable: deploy_script
        label: Deploy script
        hint: >
          Whenever a new release of your service is deployed, this script will be run. This makes it the
          perfect place to run database migrations or cache your routes and configuration.
        type: code
        default: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan migrate --force
          rm public/storage
          php artisan storage:link

deployment:

  - resource: image
    name: laravel
    dockerfile: Dockerfile
    arguments:
      - key: PRIVATE_COMPOSER_REGISTRY_URL_{{ loop.key }}
        value: "{{ loop.value.url }}"
        loop: "{{ variable.private_composer_registries }}"
      - key: PRIVATE_COMPOSER_REGISTRY_USERNAME_{{ loop.key }}
        value: "{{ loop.value.username }}"
        loop: "{{ variable.private_composer_registries }}"
      - key: PRIVATE_COMPOSER_REGISTRY_PASSWORD_{{ loop.key }}
        value: "{{ loop.value.password }}"
        loop: "{{ variable.private_composer_registries }}"

  - resource: volume
    name: laravel_data

  - resource: config_file
    name: server_conf
    source: server.conf

  - resource: container
    name: laravel
    image: "{* image.laravel *}"
    volume_mounts:
      - volume: "{* volume.laravel_data *}"
        mount_path: /var/www/html
    environment:
      - map: "{{ environment }}"
      - key: TIMEZONE
        value: "{{ variable.timezone }}"
      - key: MAX_FILE_UPLOAD
        value: "{{ variable.maximum_file_upload_size }}"
      - key: OPCACHE
        value: "{{ variable.opcache_enabled }}"
    memory: 256
    cpus: 250

  - resource: container
    name: "daemon_{{ loop.key }}"
    image: "{* image.laravel *}"
    command: "{{ loop.value }}"
    volume_mounts:
      - volume: "{* volume.laravel_data *}"
        mount_path: /var/www/html
    environment:
      - map: "{{ environment }}"
      - key: TIMEZONE
        value: "{{ variable.timezone }}"
    memory: 256
    cpus: 250
    loop: "{{ variable.daemons }}"

  - resource: container
    name: scheduler
    image: "{* image.laravel *}"
    command: bash /scheduler.sh
    volume_mounts:
      - volume: "{* volume.laravel_data *}"
        mount_path: /var/www/html
    environment:
      - map: "{{ environment }}"
      - key: TIMEZONE
        value: "{{ variable.timezone }}"
    memory: 256
    cpus: 250
    if: "{{ variable.run_scheduler }}"

  - resource: container
    name: nginx
    image: smoothy/nginx:1.19-1.0.0
    config_file_mounts:
      - config_file: "{* config_file.server_conf *}"
        mount_path: /etc/nginx/conf.d/server.conf
    volume_mounts:
      - volume: "{* volume.laravel_data *}"
        mount_path: /var/www/html
    environment:
      - key: MAX_FILE_UPLOAD
        value: "{{ variable.maximum_file_upload_size }}"
    memory: 256
    cpus: 250

  - resource: entrypoint
    name: laravel_service
    title: Laravel service
    container: "{* container.nginx *}"
    port: 8080

interface:
  volumes:
    - title: Laravel service
      volume: "{* volume.laravel_data *}"
  logs:
    - title: NGINX error logs
      container: "{* container.nginx *}"
    - title: Laravel logs
      container: "{* container.laravel *}"
    - title: "Daemon logs: {{ loop.value }}"
      container: "{* container.daemon_{{ loop.key }} *}"
      loop: "{{ variable.daemons }}"
