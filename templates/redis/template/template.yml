api: v1

meta:
  name: Redis
  description: An open-source key-value datastore.

form:

  - name: General
    questions:

      - type: select
        name: Version
        description: > 
          The version of Redis datastore.
        variable: version
        required: true
        immutable: true
        options:
          - value: 5
            name: 5
          - value: 6
            name: 6
        default: 6

      - type: binary_number
        name: Memory
        description: >
          The amount of memory allocated to the Redis database.
        variable: memory
        minimum: 1024
        default: 2048

      - type: number
        name: CPU
        description: >
          The number of CPU millicores allocated to the Redis database.
        variable: cpus
        default: 1000

  - name: Authentication
    questions:

      - type: password
        name: Password
        description: >
          The password of the datastore that is configured the first time that the service is 
          installed on a server.
        variable: password
        required: true
        immutable: true
        default: "{{ environment.REDIS_PASSWORD }}"

deployment:

  - type: volume
    name: redis_5
    if: "{{ variable.version == 5 }}"

  - type: volume
    name: redis_6
    if: "{{ variable.version == 6 }}"

  - type: container
    name: redis
    image:
      switch:
        - case: "{{ variable.version == 5 }}"
          value: bitnami/redis:5.0
        - case: "{{ variable.version == 6 }}"
          value: bitnami/redis:6.0
    volume_mounts:
      - volume: "{* volume.redis_5 *}"
        mount_path: /bitnami/redis/data
        if: "{{ variable.version == 5 }}"
      - volume: "{* volume.redis_6 *}"
        mount_path: /bitnami/redis/data
        if: "{{ variable.version == 6 }}"
    environment:
      - name: REDIS_PASSWORD
        value: "{{ variable.password }}"
    memory: "{{ variable.memory }}"
    cpus: "{{ variable.cpus }}"

  - type: entrypoint
    name: redis
    alias: Redis database
    container: "{* container.redis *}"
    port: 6379

interface:

  - type: shared_variable
    name: REDIS_URL
    value: "redis://:{{ variable.password }}@{{ entrypoint.redis.host }}:{{ entrypoint.redis.port }}"

  - type: shared_variable
    name: REDIS_HOST
    value: "{{ entrypoint.redis.host }}"

  - type: shared_variable
    name: REDIS_PORT
    value: "{{ entrypoint.redis.port }}"

  - type: shared_variable
    name: REDIS_PASSWORD
    value: "{{ variable.password }}"

  - type: logs
    name: Redis logs
    container: "{* container.redis *}"